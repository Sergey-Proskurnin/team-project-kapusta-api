{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "kapusta-api",
    "description": "Showing off kapusta-api",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json",
    "text/plain",
    "multipart/form-data",
    "image/*"
  ],
  "produces": ["application/json", "text/plain", "application/xml"],
  "servers": [{ "url": "https://kapusta-api.herokuapp.com/api/v1" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Register's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterError"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "User has not verified his email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginErrorVerifiedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "User current",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Current user object"
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "204": {
            "description": "success",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/balance": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User balance",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Balance's object",
            "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/verify": {
      "get": {
        "tags": ["Auth"],
        "summary": "User email verify",
        "parameters": [
          {
            "in": "path",
            "name": "verificationToken",
            "required": true,
            "type": "string",
            "description": "Users's verify token"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserVerifyResponse"
                }
              }
            }
          },
          "404": {
            "description": "Fail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseUserVerify"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "201"
          },
          "user": {
            "type": "object",
            "description": "User's credential",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar"
              },
              "verifyToken": {
                "type": "string",
                "description": "User's verify token"
              }
            }
          }
        }
      },
      "RegisterError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error"
          },
          "code": {
            "type": "string",
            "description": "409"
          },
          "message": {
            "type": "string",
            "description": "Email in use"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "User's token"
              },
              "user": {
                "type": "object",
                "description": "User's credential",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      },
      "LoginErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error"
          },
          "code": {
            "type": "string",
            "description": "401"
          },
          "message": {
            "type": "string",
            "description": "Email or password is wrong"
          }
        }
      },
      "LoginErrorVerifiedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error"
          },
          "code": {
            "type": "string",
            "description": "409"
          },
          "message": {
            "type": "string",
            "description": "User has not verified his email"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "200"
          },
          "user": {
            "type": "object",
            "description": "User's credential",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar"
              },
              "token": {
                "type": "string",
                "description": "User's token"
              },
              "idCloudAvatar": {
                "type": "string",
                "description": "User's id cloud avatar"
              },
              "balance": {
                "type": "number",
                "description": "User's balance"
              },
              "friend": {
                "type": "string",
                "description": "User's id cloud friend"
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "Error code",
            "example": "500"
          },
          "message": {
            "type": "string",
            "description": "Massage error server",
            "example": "Server error"
          }
        }
      },
      "BalanceRequest": {
        "type": "object",
          "properties": {
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 0
          }
        }
      },
      "BalanceResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success"
          },
          "code": {
            "type": "string",
            "description": "200"
          },
          "data": {
            "type": "object",
            "properties": {
              "balance": {
                "type": "number",
                "description": "User's balance",
                "example": 50000
              }
            }
          }
        }
      },
      "BalanceErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "404",
            "example": "404"
          },
          "message": {
            "type": "string",
            "description": "Not found",
            "example": "Not found"
          }
        }
      },
      "UserVerifyResponse": {
        "type": "string",
        "example": "Congratulations, your email has been successfully verified, go to the login page in the phone book and enter your email and password."
      },
      "ErrorResponseUserVerify": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "error",
            "example": "error"
          },
          "code": {
            "type": "string",
            "description": "404",
            "example": "404"
          },
          "message": {
            "type": "string",
            "description": "User not found",
            "example": "User not found"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
